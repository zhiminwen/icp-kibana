apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  namespace: kube-system
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #for debugging
          # command: ["/bin/sh"]
          # args: ["-c", "while true; do sleep 10; done"]
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.service.internalPort }}
          volumeMounts:
            - name: volume-kibana-configmap
              mountPath: /opt/kibana/config
            - name: volume-es-certs
              mountPath: {{ .Values.elasticsearch.certPathToMount }} 
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
      - name: volume-kibana-configmap
        configMap:
          name: {{ template "fullname" . }}
      - name: volume-es-certs
        secret:
          secretName: es-secrets
          items:
            - key: es-ca
              path: ca.pem
            - key: es-cert
              path: client.pem
            - key: es-key
              path: client-key.pem


